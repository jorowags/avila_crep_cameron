# Print the correlation matrix
print(correlation_matrix)
# Compute correlation matrix with p-values
cor_results <- corr.test(data_subset)
# Extract the correlation matrix
cor_matrix <- cor_results$r
# Extract the p-value matrix
p_matrix <- cor_results$p
# Find significant correlations (e.g., at the 0.05 level)
sig_indices <- which(p_matrix < 0.05, arr.ind = TRUE)
# Data frame to store the results
results <- data.frame(
variable1 = character(),
variable2 = character(),
correlation = numeric(),
p_value = numeric(),
stringsAsFactors = FALSE
)
# Extract significant correlations and corresponding p-values
for (i in 1:nrow(sig_indices)) {
if (sig_indices[i, "row"] < sig_indices[i, "col"]) {  # To avoid duplicates
results <- rbind(results, c(
colnames(cor_matrix)[sig_indices[i, "row"]],
colnames(cor_matrix)[sig_indices[i, "col"]],
cor_matrix[sig_indices[i, "row"], sig_indices[i, "col"]],
p_matrix[sig_indices[i, "row"], sig_indices[i, "col"]]
))
}
}
print(results)
View(cor_matrix)
View(p_matrix)
View(cor_matrix)
View(cor_matrix)
# pull out the mental fatigue r and p
mf_choice_r <- cor_matrix[6, 1]
mf_choice_p <- p_matrix[6, 1]
# pull out the physical fatigue r and p
pf_choice_r <- cor_matrix[7, 1]
pf_choice_p <- p_matrix[7, 1]
# pull out the significant motivation - choice correlation
mot_choice_r <- cor_matrix[8, 1]
mot_choice_p <- p_matrix[8, 1]
mf_choice_r <- round(cor_matrix[6, 1], 2)
mf_choice_p <- round(p_matrix[6, 1], 2)
# pull out the physical fatigue r and p
pf_choice_r <- round(cor_matrix[7, 1], 2)
pf_choice_p <- round(p_matrix[7, 1], 2)
# pull out the significant motivation - choice correlation
mot_choice_r <- round(cor_matrix[8, 1], 2)
mot_choice_p <- round(p_matrix[8, 1], 2)
mf_choice_r <- formatC(round(cor_matrix[6, 1], 2), format = "f", digits = 2, decimal.mark = ".")
mf_choice_r <- sub("^0", "", mf_choice_r)
mf_choice_r
mf_choice_r <- formatC(round(cor_matrix[6, 1], 2), format = f, digits = 2, decimal.mark = ".")
mf_choice_r <- round(cor_matrix[6, 1], 2)
mf_choice_r <- sub("^0", "", mf_choice_r)
mf_choice_p <- round(p_matrix[6, 1], 2)
mf_choice_p <- sub("^0", "", mf_choice_p)
mf_choice_r <- formatC(round(cor_matrix[6, 1], 2), format = "f", digits = 2, decimal.mark = ".")
mf_choice_r <- sub("^0", "", mf_choice_r)
mf_choice_p <- formatC(round(p_matrix[6, 1], 2), format = "f", digits = 2, decimal.mark = ".")
mf_choice_p < sub("^0", "", mf_choice_p)
mf_choice_p < sub("^0", "", mf_choice_p)
mf_choice_p <- sub("^0", "", mf_choice_p)
pf_choice_r <- formatC(round(cor_matrix[7, 1], 2), format = "f", digits = 2, decimal.mark = ".")
pf_choice_r <- sub("^0", "", pf_choice_r)
pf_choice_p <- formatC(round(p_matrix[7, 1], 2), format = "f", digits = 2, decimal.mark = ".")
pf_choice_p <- sub("^0", "", p_choice_p)
pf_choice_p <- formatC(round(p_matrix[7, 1], 2), format = "f", digits = 2, decimal.mark = ".")
pf_choice_p <- sub("^0", "", p_choice_p)
pf_choice_p <- sub("^0", "", pf_choice_p)
pf_choice_p <- formatC(round(p_matrix[7, 1], 2), format = "f", digits = 2, decimal.mark = ".")
pf_choice_p <- sub("^0", "", pf_choice_p)
pf_choice_r <- sub("^0", "", pf_choice_r)
pf_choice_r <- sub("^0", "", pf_choice_r)
pf_choice_r <- sub("^-0", "", pf_choice_r)
pf_choice_r <- sub("^-0", "-", pf_choice_r)
pf_choice_r <- sub("^-0", "-", pf_choice_r)
pf_choice_r <- sub("^-0", "-.", pf_choice_r)
pf_choice_r <- sub("^-0", " -", pf_choice_r)
pf_choice_r <- paste0("-", pf_choice_r)
mot_choice_r <- formatC(round(cor_matrix[8, 1], 2), format = "f", digits = 2, decimal.mark = ".")
mot_choice_r <- sub("^0", "", mot_choice_r)
mot_choice_p <- formatC(round(cor_matrix[8, 1], 2), format = "f", digits = 2, decimal.mark = ".")
mot_choice_p <- sub("^0", "", mot_choice_p)
cor.test(data$MFI_motivation, data$choice_index)
mot_choice_test <- cor.test(data$MFI_motivation, data$choice_index)
View(mot_choice_test)
mot_choice_t <- mot_choice_test$statistic
mot_choice_df <- mot_choice_test$parameter
mot_choice_t <- round(mot_choice_test$statistic, 2)
View(model1)
model1 <- glmer(Value_centered ~ Trial_centered + (Trial_centered | CASE), data = tall_data, family = binomial(link = "logit"))
summary(model1)
beta_Trial_centered <- fixef(model1)["Trial_centered"]
pr_value_Trial_centered <- summary(model1)$coefficients["Trial_centered", "Pr(>|z|)"]
pr_value_Trial_centered <- round(summary(model1)$coefficients["Trial_centered", "Pr(>|z|)"], 2)
beta_interaction <- fixef(model2)["Trial_centered:effortdiff_centered"]
pr_value_interaction <- summary(model2)$coefficients["Trial_centered:effortdiff_centered", "Pr(>|z|)"]
summary(model3)
beta_interaction_efficacy <- fixef(model2)["Trial_centered:efficacy_centered"]
pr_value_interaction_efficacy <- summary(model2)$coefficients["Trial_centered:efficacy_centered", "Pr(>|z|)"]
beta_interaction_efficacy <- fixef(model3)["Trial_centered:efficacy_centered"]
pr_value_interaction_efficacy <- summary(model3)$coefficients["Trial_centered:efficacy_centered", "Pr(>|z|)"]
summary(model4)
summary(model4)
beta_interaction_aversion <- fixef(model4)["Trial_centered:aversion_centered"]
pr_value_interaction_aversion <- summary(model4)$coefficients["Trial_centered:aversion_centered", "Pr(>|z|)"]
# Print summary of models
summary(model1)
beta_Trial_centered <- fixef(model1)["Trial_centered"]
pr_value_Trial_centered <- round(summary(model1)$coefficients["Trial_centered", "Pr(>|z|)"], 2)
summary(model2)
beta_interaction_effortdiff <- fixef(model2)["Trial_centered:effortdiff_centered"]
pr_value_interaction_effortdiff <- round(summary(model2)$coefficients["Trial_centered:effortdiff_centered", "Pr(>|z|)"], 2)
summary(model3)
beta_interaction_efficacy <- fixef(model3)["Trial_centered:efficacy_centered"]
pr_value_interaction_efficacy <- round(summary(model3)$coefficients["Trial_centered:efficacy_centered", "Pr(>|z|)"], 2)
summary(model4)
beta_interaction_aversion <- fixef(model4)["Trial_centered:aversion_centered"]
pr_value_interaction_aversion <- round(summary(model4)$coefficients["Trial_centered:aversion_centered", "Pr(>|z|)"], 2)
summary(model3)
beta_interaction_efficacy <- fixef(model3)["Trial_centered:efficacy_centered"]
pr_value_interaction_efficacy <- round(summary(model3)$coefficients["Trial_centered:efficacy_centered", "Pr(>|z|)"], 2)
ifelse(pr_value_interaction_efficacy == 0, "< .001", pr_value_interaction_efficacy)
ifelse(pr_value_interaction_efficacy == 0, "< .001", pr_value_interaction_efficacy)
beta_interaction_efficacy <- fixef(model3)["Trial_centered:efficacy_centered"]
pr_value_interaction_efficacy <- round(summary(model3)$coefficients["Trial_centered:efficacy_centered", "Pr(>|z|)"], 2)
pr_value_interaction_efficacy <- ifelse(pr_value_interaction_efficacy == 0, "< .001", pr_value_interaction_efficacy)
psych_data <- c(1, 2, 3, 4, 5)
mean(psych_data)
sd(psych_data)
library(psych)
?psych
describe(psych_data)
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = rnorm(100, mean = 30, sd = 5),
gender = sample(c("Male", "Female"), 100, replace = TRUE)
)
summary(data$age)
ggplot(data, aes(x = age)) +
geom_histogram()
data %>%
group_by(gender) %>%
summarise(mean_age = mean(age))
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = rnorm(100, mean = 30, sd = 5),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
conscientiousness = rnorm(100, mean = 2.5, sd = 1),
agreeableness = rnorm(100, mean = 2.5, sd = 1),
neuroticism = rnorm(100, mean = 2.5, sd = 1),
openness = rnorm(100, mean = 2.5, sd = 1),
agreeableness = rnorm(100, mean = 2.5, sd = 1),
)
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = rnorm(100, mean = 30, sd = 5),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
conscientiousness = rnorm(100, mean = 2.5, sd = 1),
agreeableness = rnorm(100, mean = 2.5, sd = 1),
neuroticism = rnorm(100, mean = 2.5, sd = 1),
openness = rnorm(100, mean = 2.5, sd = 1),
extraversion = rnorm(100, mean = 2.5, sd = 1),
)
summary(data$age)
ggplot(data, aes(x = age)) +
geom_histogram()
data %>%
group_by(gender) %>%
summarise(mean_age = mean(age))
View(data)
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = rnorm(100, mean = 30, sd = 5),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1)),
agreeableness = rnorm(100, mean = 2.5, sd = 1),
neuroticism = rnorm(100, mean = 2.5, sd = 1),
openness = rnorm(100, mean = 2.5, sd = 1),
extraversion = rnorm(100, mean = 2.5, sd = 1),
)
summary(data$age)
ggplot(data, aes(x = age)) +
geom_histogram()
data %>%
group_by(gender) %>%
summarise(mean_age = mean(age))
View(data)
data <- tibble(
id = 1:100,
age = rnorm(100, mean = 30, sd = 5),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1)),
agreeableness = round(rnorm(100, mean = 2.5, sd = 1)),
neuroticism = round(rnorm(100, mean = 2.5, sd = 1)),
openness = round(rnorm(100, mean = 2.5, sd = 1)),
extraversion = round(rnorm(100, mean = 2.5, sd = 1)),
)
View(data)
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = round(rnorm(100, mean = 30, sd = 5), 2),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
openness = round(rnorm(100, mean = 3.5, sd = 0.8)),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1)),
extraversion = round(rnorm(100, mean = 3, sd = 1)),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5)),
neuroticism = round(rnorm(100, mean = 2, sd = 1))
)
summary(data$age)
ggplot(data, aes(x = age)) +
geom_histogram()
data %>%
group_by(gender) %>%
summarise(mean_age = mean(age))
View(data)
setwd("~/Downloads")
data %>%
group_by(gender) %>%
summarise(mean_age = mean(age))
knitr::opts_chunk$set(echo = TRUE)
data %>%
group_by(gender) %>%
summarise(mean_age = mean(age))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = round(rnorm(100, mean = 30, sd = 5)),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
openness = round(rnorm(100, mean = 3.5, sd = 0.8), 1),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1), 1),
extraversion = round(rnorm(100, mean = 3, sd = 1), 1),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5), 1),
neuroticism = round(rnorm(100, mean = 2, sd = 1), 1)
)
summary(data$age)
ggplot(data, aes(x = age)) +
geom_histogram()
data %>%
group_by(gender) %>%
summarise(mean_age = mean(age))
View(data)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = round(rnorm(100, mean = 30, sd = 5)),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
openness = round(rnorm(100, mean = 3.5, sd = 0.8), 1),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1), 1),
extraversion = round(rnorm(100, mean = 3, sd = 1), 1),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5), 1),
neuroticism = round(rnorm(100, mean = 2, sd = 1), 1)
)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = round(rnorm(100, mean = 30, sd = 5)),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
openness = round(rnorm(100, mean = 3.5, sd = 0.8), 1),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1), 1),
extraversion = round(rnorm(100, mean = 3, sd = 1), 1),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5), 1),
neuroticism = round(rnorm(100, mean = 2, sd = 1), 1)
)
View(data)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = round(rnorm(100, mean = 30, sd = 5)),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
openness = round(rnorm(100, mean = 3.5, sd = 0.8), 1),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1), 1),
extraversion = round(rnorm(100, mean = 3, sd = 1), 1),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5), 1),
neuroticism = round(rnorm(100, mean = 2, sd = 1), 1)
)
View(data)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = round(rnorm(100, mean = 30, sd = 5)),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
openness = round(rnorm(100, mean = 3.5, sd = 0.8), 1),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1), 1),
extraversion = round(rnorm(100, mean = 3, sd = 1), 1),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5), 1),
neuroticism = round(rnorm(100, mean = 2, sd = 1), 1)
)
View(data)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(124)
data <- tibble(
id = 1:100,
age = round(rnorm(100, mean = 30, sd = 5)),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
openness = round(rnorm(100, mean = 3.5, sd = 0.8), 1),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1), 1),
extraversion = round(rnorm(100, mean = 3, sd = 1), 1),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5), 1),
neuroticism = round(rnorm(100, mean = 2, sd = 1), 1)
)
View(data)
summary(data$age)
summary(data$conscientiousness)
summary(data$age)
summary(data$conscientiousness)
ggplot(data, aes(x = age)) +
geom_histogram()
ggplot(data, aes(x = conscientiousness)) +
geom_histogram()
data %>%
group_by(gender) %>%
summarise(mean_age = mean(age))
data %>%
group_by(gender) %>%
summarise(mean_conscientiousness = mean(conscientiousness))
knitr::opts_chunk$set(echo = TRUE)
##Open Database
library(readxl)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
if(!require(pacman)) install.packages("pacman")
p_load("dplyr", "psych", "stringr", "haven", "qgraph", "bootnet", "parcor", "parallel", "ggthemes", "reshape2")
select <- dplyr::select
#setwd("/Volumes/VERBATIM HD/PhD/progetti/Network Demenze/Analisi/AD/AD_graphical_def")
#setwd("G:/PhD/progetti/Network Demenze/Analisi/AD/AD_graphical_def")
#getwd()
##Open Database
library(readxl)
dat <- read_excel("database.xlsx")
#dat <- read.table("database.txt", header = T)
View(dat)
names(dat)[1]="ID"
dat$ID <- factor(dat$ID)
dat$Gen <- factor(dat$Gen)
summary(dat)
nboots <- 4000 # number of bootstrap samples
ncores <- parallel::detectCores()-1 # number of cores for bootstrap
# demographics in riga, ordinate
summarize(dat, N = n(), Male = sum(Sex == 1), Female = sum(Sex == 0), M_age = mean(Age), SD_age = sd(Age), M_edu = mean(Edu), SD_edu = sd(Edu))
#crea un nuovo database con solo le variabili che andranno usate nel network - inserire qua variabili che si vogliono aggiungere
netdt <- select(dat,Sex,Age,Edu,MMSE,FluFon,FluSem,Token,Digit,MemI,MemD,AppI,AppI_Int,AppD,AppD_Int,AppR,Corsi,CopiaRey,RievRey,AprCos,MatAtt,Raven,TMT_A,TMT_Bcat)
names(netdt) <- c("Sex","Age","Edu","MMSE","PhonFlu","SemFlu","Token","Digit","MemIR","MemDR","AppIR","AppIR_I","AppDR","AppDR_I","AppD","Corsi","ReyCopy","ReyDR","DrawCopy","AttMat","Raven","TMT_A","TMT_B")
View(netdt)
#calcolare il network: corMethod = "cor" -> usa solo correlazioni, di default cambia tipo di correlazione a seconda del tipo di variabile in esame (scala, ordinale, ecc); tuning = .25 -> abbassa la penalizzazione  EBIC per le correlazioni vicine allo 0; tuning = 0 -> abbassa la penalizzazione  EBIC per le correlazioni vicine allo 0, diventando BIC
net <- estimateNetwork(netdt, default = "EBICglasso", corMethod = "cor", tuning = .25)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
if(!require(pacman)) install.packages("pacman")
p_load("dplyr", "psych", "stringr", "haven", "qgraph", "bootnet", "parcor", "parallel", "ggthemes", "reshape2")
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = round(rnorm(100, mean = 30, sd = 5)),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
openness = round(rnorm(100, mean = 3.5, sd = 0.8), 1),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1), 1),
extraversion = round(rnorm(100, mean = 3, sd = 1), 1),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5), 1),
neuroticism = round(rnorm(100, mean = 2, sd = 1), 1)
)
summary(data$age)
set.seed(123)  # Set seed for reproducibility
# Generate data for the Big 5 personality traits
data <- data.frame(
openness = round(rnorm(100, mean = 3.5, sd = 0.8), 1),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1), 1),
extraversion = round(rnorm(100, mean = 3, sd = 1), 1),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5), 1),
neuroticism = round(rnorm(100, mean = 2, sd = 1), 1)
)
library(ggplot2)
# Create a histogram for each personality trait
hist_openness <- ggplot(data, aes(x = openness)) +
geom_histogram(binwidth = 0.5, fill = "blue", color = "black") +
labs(title = "Openness Distribution", x = "Openness", y = "Frequency")
hist_conscientiousness <- ggplot(data, aes(x = conscientiousness)) +
geom_histogram(binwidth = 0.5, fill = "green", color = "black") +
labs(title = "Conscientiousness Distribution", x = "Conscientiousness", y = "Frequency")
hist_extraversion <- ggplot(data, aes(x = extraversion)) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black") +
labs(title = "Extraversion Distribution", x = "Extraversion", y = "Frequency")
hist_agreeableness <- ggplot(data, aes(x = agreeableness)) +
geom_histogram(binwidth = 0.5, fill = "purple", color = "black") +
labs(title = "Agreeableness Distribution", x = "Agreeableness", y = "Frequency")
hist_neuroticism <- ggplot(data, aes(x = neuroticism)) +
geom_histogram(binwidth = 0.5, fill = "orange", color = "black") +
labs(title = "Neuroticism Distribution", x = "Neuroticism", y = "Frequency")
# Display the histograms in a new window
plot(hist_openness)
plot(hist_conscientiousness)
plot(hist_extraversion)
plot(hist_agreeableness)
plot(hist_neuroticism)
library(dplyr)
# Calculate mean age by gender
mean_age_by_gender <- data %>%
group_by(gender) %>%
summarise(mean_age = mean(age, na.rm = TRUE))
# Load packages
library(tidyverse)
# Simulate dataset
set.seed(123)
data <- tibble(
id = 1:100,
age = round(rnorm(100, mean = 30, sd = 5)),
gender = sample(c("Male", "Female"), 100, replace = TRUE),
openness = round(rnorm(100, mean = 3.5, sd = 0.8), 1),
conscientiousness = round(rnorm(100, mean = 2.5, sd = 1), 1),
extraversion = round(rnorm(100, mean = 3, sd = 1), 1),
agreeableness = round(rnorm(100, mean = 4, sd = 0.5), 1),
neuroticism = round(rnorm(100, mean = 2, sd = 1), 1)
)
library(dplyr)
# Calculate mean age by gender
mean_age_by_gender <- data %>%
group_by(gender) %>%
summarise(mean_age = mean(age, na.rm = TRUE))
mean_age_by_gender
# Assuming you have a dataset 'data' with columns 'gender' and Big 5 variables
# Calculate means by gender
means_by_gender <- data %>%
group_by(gender) %>%
summarize(
mean_openness = mean(openness, na.rm = TRUE),
mean_conscientiousness = mean(conscientiousness, na.rm = TRUE),
mean_extraversion = mean(extraversion, na.rm = TRUE),
mean_agreeableness = mean(agreeableness, na.rm = TRUE),
mean_neuroticism = mean(neuroticism, na.rm = TRUE)
)
means_by_gender
setwd("~/Documents/GitHub/avila_crep_cameron")
knitr::opts_chunk$set(echo = TRUE)
# Here we will write code that will be called in our method section
# Limit the original data set to JUST the variables you will be using
knitr::opts_chunk$set(echo = TRUE)
packages = c("psych")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
url <- "https://raw.githubusercontent.com/jorowags/avila_crep_cameron/main/avila_cameron_data.csv"
initial_data <- read.csv(url)
data <- initial_data
View(avila_cameron_data)
# Here we will write code that will be called in our method section
# Limit the original data set to JUST the variables you will be using
myvars <- c("C001", "C002", "C003")
newdata <- avila_cameron_data[myvars]
View(newdata)
newdata < - newdata(C001=="1")
newdata <- subset(newdata, C001 == 1)
View(newdata)
